name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:

  build_and_test_cpp:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build dependencies from Dockerfile
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            cmake \
            python3.12 \
            python3.12-dev \
            python3.12-venv \
            libgomp1 \
            libcurl4-openssl-dev

          sudo apt install -y ccache

          # sudo apt-get install portaudio19-dev python3-pyaudio

          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 100
          
          # python3 -m ensurepip --upgrade
          # python3 -m pip install --upgrade pip setuptools wheel

      - name: Build C++ extension and dependencies
        run: ./install.sh --clean

      - name: Download Test Models for Integration Tests
        run: |
          echo "--- Creating directory for test models ---"
          mkdir -p test_assets
          
          echo "--- Downloading Llama test model ---"
          wget -q -O test_assets/tinyllama.gguf "https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.Q2_K.gguf"
          
          echo "--- Downloading Whisper test model ---"
          wget -q -O test_assets/ggml-tiny.en.bin "https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-tiny.en.bin"
          
          echo "--- Test models downloaded successfully ---"


      - name: Run C++ Unit Tests and Diagnostics
        run: |
          # echo "--- Content of build directory ---"
          # ls -laR build
      
          echo "--- Content of CMake Cache ---"
          grep "BUILD_TESTING" build/CMakeCache.txt
      
          echo "--- Content of CTest Configuration ---"
          cat build/ataraxai/core_ai/CTestTestfile.cmake
      
          echo "--- Running CTest ---"
          cd build/ataraxai/core_ai/
          ctest --output-on-failure --verbose

      - name: Upload build artifact for the next job
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/



  test_and_lint_python:
    needs: build_and_test_cpp
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download C++ build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build/

      - name: Install and upgrade pip for Python 3.12
        run: |
          # python -m ensurepip --upgrade
          python -m pip install --upgrade pip setuptools wheel


      - name: Install project dependencies
        run: python -m pip install -e .[dev]

      - name: Run Python Tests with Pytest
        run: pytest --cov=ataraxai --cov-report=term-missing

      - name: Lint with Ruff
        run: ruff check ataraxai

      - name: Type Check with MyPy
        run: mypy ataraxai